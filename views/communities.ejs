<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200"
    />
    <link rel="stylesheet" href="./css/navbar.css" />
    <link rel="stylesheet" href="./css/communities.css" />
    <link rel="shortcut icon" href="img/core.png" />
    <title>CORE - Communities</title>
  </head>
  <body>
    <%- include('partials/navbar', { pagePath: 'communities' }) %>

    <div class="container">
      
    <div id="com-btn-container" class="column">
      <button class="create-post-btn" onclick="window.location.href='/post/create';">
        <span class="material-symbols-outlined"> add </span>
    </div>

    <div id="posts-container" class="column">
      <% posts.forEach(post => { %>
      <div class="post">
        <div class="votes">
          <div class="vote-interactions">
            <span class="material-symbols-outlined" id="boost-button" onclick="boostPost('<%= post.id %>', '<%= user %>')"> arrow_upward_alt </span>
            <div id="post-score-<%= post.id %>">
              <span class="score">
                <%= post.boosts - post.detracts %>
              </span>
              
            </div>
            <span class="material-symbols-outlined" id="detract-button" onclick="detractPost('<%= post.id %>', '<%= user %>')"> arrow_downward_alt </span>   
          </div>     
        </div>
        <div class="thumbnail" onclick="window.location.href='/posts/<%= post.id %>';">
          <% if (post.linkPreview) { %>
            <% let imageUrl = post.linkPreview.image || post.linkPreview.favicon; %> 
            <% if (imageUrl) { %> 
              <img src="<%= imageUrl %>" alt="thumbnail" class="thumbnail-image" />
          <% } %>
          <% } else { %>
          <img
            src="/thumbnail_image_url.jpg"
            alt="Thumbnail Image"
            class="thumbnail-image"
          />
          
          <% } %>
        </div>
        <div class="post-content" onclick="window.location.href='/posts/<%= post.id %>';">
          <div class="title">
            <%= post.title %>
          </div>
          <div class="link"> 
            <% if (post.link) { %>
              <%= post.link %>
            <% } %>
          </div>
          <div class="description">
            <%= post.content %>
          </div>
            
          <div class="post-info">
            <div class="communities_id">
              <%= post.community.name %>
            </div>
            <span class="material-symbols-outlined" id="user-icon"> person </span>
            <strong><%= post.username %></strong>
            <span class="material-symbols-outlined" id="score-icon"> sentiment_satisfied </span>
            <%= post.score %>
            <span class="material-symbols-outlined" id="comments-icon"> comment </span>
          <%= post.comments.length %>
            <span class="material-symbols-outlined" id="date-icon"> schedule </span>
            
            <%
            let postDate = new Date(post.created_at);
            let today = new Date();
            let formattedDate;
          
            // Calculate time difference in milliseconds
            let diff = today - postDate;
          
            // Convert time difference to different units
            let minutes = Math.floor(diff / 60000); // 60,000 milliseconds in a minute
            let hours = Math.floor(diff / 3600000); // 3,600,000 milliseconds in an hour
            let days = Math.floor(diff / 86400000); // 86,400,000 milliseconds in a day
            let years = Math.floor(diff / 31536000000); // 31,536,000,000 milliseconds in a year
          
            // Decide the format based on the time difference
            if (minutes < 60) {
              formattedDate = minutes + ' minutes ago';
            } else if (hours < 24) {
              formattedDate = hours + ' hours ago';
            } else if (days < 365) {
              formattedDate = days + ' days ago';
            } else {
              formattedDate = years + ' years ago';
            }
          %>
          <%= formattedDate %>
          
        </div>
        </div>
      </div>
      <% }); %>
    </div>
      <% const jobPostings = [
        {
          companyName: "Apple",
          jobTitle: "Security Analyst",
          jobLocation: "Boston, MA or Remote",
          jobOverview: "Protect our digital assets and ensure compliance with the latest security standards.",
          jobType: "Full-Time",
          jobSalary: "Up to $115k/year",
          jobBenefits: "Health & Dental, Company Subscriptions, Paid Time Off",
          companyLogo: "./src/applelogo.png"
        },
        {
          companyName: "Amazon",
          jobTitle: "Data Scientist",
          jobLocation: "Seattle, WA",
          jobOverview: "Utilize large datasets to uncover insights and inform business strategy decisions.",
          jobType: "Full-Time",
          jobSalary: "Up to $150k/year",
          jobBenefits: "401k, Flexible Hours, Relocation Assistance",
          
          companyLogo: "./src/amazonlogo.png"
          },
          
          {
          companyName: "Microsoft",
          jobTitle: "Software Engineer",
          jobLocation: "Redmond, WA or Remote",
          jobOverview: "Design, build and manage cloud-based products using cutting edge technology.",
          
          jobType: "Full-Time",
          jobSalary: "Up to $130k/year",
          jobBenefits: "Unlimited PTO, Equity Compensation, 401k Matching",
          companyLogo: "./src/microsoftlogo.png"
          },
          
          {
          companyName: "Google",
          jobTitle: "Product Manager",
          
          jobLocation: "Mountain View, CA",
          jobOverview: "Lead cross-functional teams to deliver innovative Google products.",
          jobType: "Full-Time",
          jobSalary: "Up to $160k/year",
          jobBenefits: "Flexible Work Arrangements, Learning Stipends, Free Meals",
          companyLogo: "./src/googlelogo.png"
          },
          
          {
          companyName: "Facebook",
          jobTitle: "UI/UX Designer",
          jobLocation: "Menlo Park, CA or Remote",
          
          jobOverview: "Create intuitive, engaging user experiences across our family of apps.",
          jobType: "Full-Time",
          jobSalary: "Up to $135k/year",
          jobBenefits: "Onsite Healthcare, Generous Leave, Development Programs",
          companyLogo: "./src/facebooklogo.png"
          },
          
          {
          companyName: "Uber",
          jobTitle: "Data Analyst",
          jobLocation: "San Francisco, CA",
          jobOverview: "Use SQL and Python to unlock insights to help enhance operations.",
          
          jobType: "Full-Time",
          jobSalary: "Up to $110k/year",
          jobBenefits: "Flexible Schedule, Commuter Benefits, Catered Lunches",
          companyLogo: "./src/uberlogo.png"
          },
          
          {
          companyName: "Airbnb",
          
          jobTitle: "Front End Engineer",
          jobLocation: "San Francisco, CA or Remote",
          jobOverview: "Develop robust web apps that connect people around the world.",
          
          jobType: "Full-Time",
          jobSalary: "Up to $140k/year",
          jobBenefits: "Equity Awards, Annual Travel Stipends, 401k Plan",
          companyLogo: "./src/airbnblogo.png",
          },
          
          {
          companyName: "Netflix",
          jobTitle: "Cloud Architect",
          
          jobLocation: "Los Angeles, CA",
          jobOverview: "Design and optimize cloud infrastructure powering our streaming platform.",
          jobType: "Full-Time",
          jobSalary: "Up to $175k/year",
          jobBenefits: "Unlimited Vacation Days, Stock Options, Full Medical Coverage",
          
          companyLogo: "./src/netflixlogo.png"
          },
          
          {
          companyName: "Tesla",
          jobTitle: "Electrical Engineer",
          jobLocation: "Fremont, CA",
          jobOverview: "Help build batteries and powertrain components for eco-friendly vehicles.",
          jobType: "Full-Time",
          
          jobSalary: "Up to $125k/year",
          jobBenefits: "Equity Awards, Clean Energy Credits, On-Site Fitness & Health",
          companyLogo: "./src/teslalogo.png"
          },
          
          {
          companyName: "IBM",
          jobTitle: "Cloud Developer",
          jobLocation: "Raleigh, NC or Remote",
          
          jobOverview: "Write and manage code for industry-leading cloud computing products.",
          
          jobType: "Full-Time",
          jobSalary: "Up to $115k/year",
          jobBenefits: "Flexible Work Options, Professional Development Funds, Wellness Programs",
          
          companyLogo: "./src/ibmlogo.png"
          },
          
          {
          companyName: "Intel",
          
          jobTitle: "Computer Architect",
          jobLocation: "Santa Clara, CA",
          jobOverview: "Design innovative chip architectures to power leading tech products.",
          jobType: "Full-Time",
          jobSalary: "Up to $150k/year",
          
          jobBenefits: "Equity Compensation, Onsite Services, Health Premiums",
          companyLogo: "./src/intellogo.png"
          },
          
          {
          
          companyName: "Oracle",
          jobTitle: "Database Administrator",
          
          jobLocation: "Austin, TX or Remote",
          jobOverview: "Install, maintain, and optimize enterprise database management systems.",
          
          jobType: "Full-Time",
          jobSalary: "Up to $120k/year",
          jobBenefits: "Flexible Working, 401k Matching, Professional Development",
          
          companyLogo: "./src/oraclelogo.png"
          },
          
          {
          companyName: "SAP",
          jobTitle: "Sales Executive",
          jobLocation: "Newtown Square, PA",
          
          jobOverview: "Strategize and close high value software and service deals globally.",
          
          jobType: "Full-Time",
          jobSalary: "Up to $130k/year + Commission",
          
          jobBenefits: "Stock Awards, Car Allowance, Expense Account",
          companyLogo: "./src/saplogo.png"
          
          },
          
          {
          companyName: "Samsung",
          
          jobTitle: "Embedded Software Engineer",
          jobLocation: "San Jose, CA",
          jobOverview: "Develop firmware and operating systems for smart consumer devices.",
          
          jobType: "Full-Time",
          jobSalary: "Up to $135k/year",
          jobBenefits: "Equity Compensation, 401k Matching, Wellness Reimbursement",
          companyLogo: "./src/samsunglogo.png"
          },
          
          {
          
          companyName: "Qualcomm",
          
          jobTitle: "Computer Vision Engineer",
          jobLocation: "San Diego, CA",
          jobOverview: "Create software that can process, analyze, and understand digital images.",
          
          jobType: "Full-Time",
          jobSalary: "Up to $140k/year",
          
          jobBenefits: "Paid Time Off, Tuition Reimbursement, Healthcare Plan",
          companyLogo: "./src/qualcommlogo.png"
          },
          
          {
          companyName: "Cisco",
          
          jobTitle: "Network Engineer",
          
          jobLocation: "San Jose, CA or Remote",
          jobOverview: "Architect, implement and support networking solutions for global enterprise.",
          jobType: "Full-Time",
          
          jobSalary: "Up to $115k/year",
          jobBenefits: "Profit Sharing, Certification Training, 401k Match",
          companyLogo: "./src/ciscologo.png"
          
          },
          
          {
          companyName: "PayPal",
          
          jobTitle: "Fraud Analyst",
          jobLocation: "San Jose, CA or Remote",
          
          jobOverview: "Detect fraudulent activity and minimize risk exposure for PayPal.",
          jobType: "Full-Time",
          jobSalary: "Up to $105k/year",
          jobBenefits: "Unlimited PTO, Stock Options, Adoption/Surrogacy Benefits",
          companyLogo: "./src/paypallogo.png"
          },
          
          {
          
          companyName: "eBay",
          
          jobTitle: "Backend Engineer",
          jobLocation: "San Jose, CA or Remote",
          jobOverview: "Scale our platform and ensure smooth transactions for millions daily.",
          
          jobType: "Full-Time",
          jobSalary: "Up to $125k/year",
          jobBenefits: "Flexible Working, Generous Leave, Equity Compensation",
          
          companyLogo: "./src/ebaylogo.png"
          
          },
          
          {
          companyName: "HP",
          
          jobTitle: "Technical Support Specialist",
          
          jobLocation: "Boise, ID or Remote",
          
          jobOverview: "Provide excellent technical support to troubleshoot issues.",
          jobType: "Full-Time",
          jobSalary: "Up to $68k/year",
          jobBenefits: "Retirement Savings, Employee Discounts, Healthcare",
          
          companyLogo: "./src/hplogo.png"
          },
          
          {
          companyName: "Dell",
          jobTitle: "QA Test Automation Engineer",
          jobLocation: "Austin, TX or Remote",
          
          jobOverview: "Automate test cases for flagship hardware and software products.",
          
          jobType: "Full-Time",
          jobSalary: "Up to $105k/year",
          jobBenefits: "Unlimited PTO, Equity Awards, Onsite Fitness Center",
          
          companyLogo: "./src/delllogo.png"
          },
          
          {
          companyName: "Adobe",
          
          jobTitle: "Software Development Engineer",
          
          jobLocation: "San Jose, CA",
          jobOverview: "Build the next generation of Adobe's industry leading creative tools.",
          
          jobType: "Full-Time",
          jobSalary: "Up to $135k/year",
          
          jobBenefits: "Learning Allowances, Equity Awards, 3 Weeks Minimum PTO",
          companyLogo: "./src/adobelogo.png"
          
          },
          
          {
          
          companyName: "Didi",
          
          jobTitle: "Data Scientist",
          jobLocation: "Beijing, China or Remote",
          
          jobOverview: "Extract insights from massive mobility datasets to help us serve.",
          jobType: "Full-Time",
          
          jobSalary: "Up to $120k/year",
          jobBenefits: "Annual Travel Allowance, Onsite Healthcare Clinic",
          
          companyLogo: "./src/didilogo.png"
          },
      ]; %>
      <div class="jobs-container">
        <% jobPostings.forEach(job => { %>
          <div class="job">
            <div class="job-content">
              <div class="job-header">
                <div class="company-logo-container">
                  <img src="<%= job.companyLogo %>" alt="Company Logo" class="company-logo" />
                </div>
                <div class="job-title-location">
                  <div class="company-name"><%= job.companyName %> / <%= job.jobTitle %></div>
                  <%= job.jobLocation %>
                </div>
              </div>
              <div class="job-body">
                <div class="job-info"><%= job.jobType %> / <%= job.jobSalary %></div>
              </div>
            </div>
          </div>
        <% }); %>
      </div>
    </div>

    <script>
function detractPost(postId, user) {
  if (!user) {
    window.location.href = '/login'; // Redirect to the login page
    return; // Stop further execution
  }
  fetch(`/posts/${postId}/boost`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ user: user, action: "detract" })
  })
  .then(response => response.json())
  .then(data => {
    console.log(data); // Console log the JSON response
    if (data.message === "Detract successful") {
      // Increase the detract count in the view
      const detractCountElement = document.getElementById(`posts-score-${postId}`);
      detractCountElement.innerText = parseInt(detractCountElement.innerText) + 1;

      // Change color of trending down arrow
      const trendingDownElement = document.querySelector(`[onclick="detractPost('${postId}', '${user}')"]`);
      trendingDownElement.style.color = "red";

      // Check if the post was boosted by the user
      const boostCountElement = document.getElementById(`posts-score-${postId}`);
      if (boostCountElement.innerText > 0) {
        const trendingUpElement = document.querySelector(`[onclick="boostPost('${postId}', '${user}')"]`);
      trendingUpElement.style.color = "black";
              boostCountElement.innerText = parseInt(boostCountElement.innerText) - 1;
      }
    } else if (data.message === "Detract removed") {
      // Decrease the detract count in the view
      const detractCountElement = document.getElementById(`posts-score-${postId}`);
      detractCountElement.innerText = parseInt(detractCountElement.innerText) - 1;

      // Change color of trending down arrow back to black
      const trendingDownElement = document.querySelector(`[onclick="detractPost('${postId}', '${user}')"]`);
      trendingDownElement.style.color = "black";
    } else {
      // Handle error
    }
  })
  .catch((error) => {
    console.error('Error:', error);
  });
}

function boostPost(postId, user) {
  if (!user) {
    window.location.href = '/login'; // Redirect to the login page
    return; // Stop further execution
  }
  fetch(`/posts/${postId}/boost`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ user: user, action: "boost" })
  })
  .then(response => response.json())
  .then(data => {
    console.log(data); // Console log the JSON response
    if (data.message === "Boost successful") {
      // Increase the boost count in the view
      const boostCountElement = document.getElementById(`posts-score-${postId}`);
      boostCountElement.innerText = parseInt(boostCountElement.innerText) + 1;

      // Change color of trending up arrow
      const trendingUpElement = document.querySelector(`[onclick="boostPost('${postId}', '${user}')"]`);
      trendingUpElement.style.color = "green";

      // Check if the post was detracted by the user
      const detractCountElement = document.getElementById(`posts-score-${postId}`);
      if (detractCountElement.innerText > 0) {
        // Decrease the detract count in the view
        const trendingDownElement = document.querySelector(`[onclick="detractPost('${postId}', '${user}')"]`);
      trendingDownElement.style.color = "black";
        detractCountElement.innerText = parseInt(detractCountElement.innerText) - 1;
      }
    } else if (data.message === "Boost removed") {
      // Decrease the boost count in the view
      const boostCountElement = document.getElementById(`posts-score-${postId}`);
      boostCountElement.innerText = parseInt(boostCountElement.innerText) - 1;

      // Change color of trending up arrow back to black
      const trendingUpElement = document.querySelector(`[onclick="boostPost('${postId}', '${user}')"]`);
      trendingUpElement.style.color = "black";
    } else {
      // Handle error
    }
  })
  .catch((error) => {
    console.error('Error:', error);
  });
}

  const communities = [
        { name: "All", icon: "schedule" },
        { name: "General", icon: "groups" },
        { name: "ML/AI", icon: "robot" },
        { name: "IT", icon: "developer_board" },
        { name: "Robotics", icon: "web" },
        { name: "Game-Dev", icon: "sports_esports" },
      ];

      function createButtons() {
    const container = document.getElementById("com-btn-container");

    communities.forEach((community) => {
        const button = document.createElement("button");

        // Add icon
        const icon = document.createElement("span");
        icon.className = "material-symbols-outlined";
        icon.appendChild(document.createTextNode(community.icon));
        button.appendChild(icon);
        
        button.className = "com-btn";
        button.setAttribute("data-community", community.name);
        button.appendChild(document.createTextNode(` ${community.name.replace(/-/g, " ")}`));
        button.addEventListener('click', function() { filterPosts(community.name); });
        container.appendChild(button);
    });
}

function filterPosts(communityName) {
    // Get all post elements
    const posts = document.querySelectorAll('.post');
    posts.forEach((post) => {
        // Check if post belongs to the selected community
        const postCommunity = post.querySelector('.communities_id').textContent.trim();
        if (communityName === 'All' || postCommunity === communityName) {
            post.style.display = ''; // Show post
        } else {
            post.style.display = 'none'; // Hide post
        }
    });
}

// Call the function to create buttons on page load
createButtons();

    </script>
  </body>
</html>
